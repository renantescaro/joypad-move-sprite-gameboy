                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Thu Apr 23 19:50:23 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc87120
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _init
                             13 	.globl _scroll_sprite
                             14 	.globl _move_sprite
                             15 	.globl _set_sprite_tile
                             16 	.globl _set_sprite_data
                             17 	.globl _joypad
                             18 	.globl _delay
                             19 	.globl _carinha
                             20 	.globl _init
                             21 	.globl _main
                             22 ;--------------------------------------------------------
                             23 ; Externals used
                             24 ;--------------------------------------------------------
                             25 	.globl _IE_REG
                             26 	.globl _SVBK_REG
                             27 	.globl _OCPD_REG
                             28 	.globl _OCPS_REG
                             29 	.globl _BCPD_REG
                             30 	.globl _BCPS_REG
                             31 	.globl _RP_REG
                             32 	.globl _HDMA5_REG
                             33 	.globl _HDMA4_REG
                             34 	.globl _HDMA3_REG
                             35 	.globl _HDMA2_REG
                             36 	.globl _HDMA1_REG
                             37 	.globl _VBK_REG
                             38 	.globl _KEY1_REG
                             39 	.globl _WX_REG
                             40 	.globl _WY_REG
                             41 	.globl _OBP1_REG
                             42 	.globl _OBP0_REG
                             43 	.globl _BGP_REG
                             44 	.globl _DMA_REG
                             45 	.globl _LYC_REG
                             46 	.globl _LY_REG
                             47 	.globl _SCX_REG
                             48 	.globl _SCY_REG
                             49 	.globl _STAT_REG
                             50 	.globl _LCDC_REG
                             51 	.globl _NR52_REG
                             52 	.globl _NR51_REG
                             53 	.globl _NR50_REG
                             54 	.globl _NR44_REG
                             55 	.globl _NR43_REG
                             56 	.globl _NR42_REG
                             57 	.globl _NR41_REG
                             58 	.globl _NR34_REG
                             59 	.globl _NR33_REG
                             60 	.globl _NR32_REG
                             61 	.globl _NR31_REG
                             62 	.globl _NR30_REG
                             63 	.globl _NR24_REG
                             64 	.globl _NR23_REG
                             65 	.globl _NR22_REG
                             66 	.globl _NR21_REG
                             67 	.globl _NR14_REG
                             68 	.globl _NR13_REG
                             69 	.globl _NR12_REG
                             70 	.globl _NR11_REG
                             71 	.globl _NR10_REG
                             72 	.globl _IF_REG
                             73 	.globl _TAC_REG
                             74 	.globl _TMA_REG
                             75 	.globl _TIMA_REG
                             76 	.globl _DIV_REG
                             77 	.globl _SC_REG
                             78 	.globl _SB_REG
                             79 	.globl _P1_REG
                             80 	.globl __io_out
                             81 	.globl __io_in
                             82 	.globl __io_status
                             83 	.globl _sys_time
                             84 	.globl __cpu
                             85 ;--------------------------------------------------------
                             86 ; special function registers
                             87 ;--------------------------------------------------------
                             88 ;--------------------------------------------------------
                             89 ; special function bits 
                             90 ;--------------------------------------------------------
                             91 ;--------------------------------------------------------
                             92 ; internal ram data
                             93 ;--------------------------------------------------------
                             94 	.area _DATA
   0000                      95 _carinha::
   0000                      96 	.ds 32
                             97 ;--------------------------------------------------------
                             98 ; overlayable items in internal ram 
                             99 ;--------------------------------------------------------
                            100 	.area _OVERLAY
                            101 ;--------------------------------------------------------
                            102 ; indirectly addressable internal ram data
                            103 ;--------------------------------------------------------
                            104 	.area _ISEG
                            105 ;--------------------------------------------------------
                            106 ; bit data
                            107 ;--------------------------------------------------------
                            108 	.area _BSEG
                            109 ;--------------------------------------------------------
                            110 ; external ram data
                            111 ;--------------------------------------------------------
                            112 	.area _XSEG
                            113 ;--------------------------------------------------------
                            114 ; global & static initialisations
                            115 ;--------------------------------------------------------
                            116 	.area _GSINIT
                            117 	.area _GSFINAL
                            118 	.area _GSINIT
                            119 ;	main.c 50
                            120 ; genAssign (pointer)
   0000 11 00 00            121 	ld	de,#_carinha + 0
   0003 3E 00               122 	ld	a,#0x00
   0005 12                  123 	ld	(de),a
                            124 ; genPlus
                            125 ; genPlusIncr
   0006 11 01 00            126 	ld	de,#_carinha + 0 + 1
                            127 ; genAssign (pointer)
   0009 3E 00               128 	ld	a,#0x00
   000B 12                  129 	ld	(de),a
                            130 ; genPlus
                            131 ; genPlusIncr
   000C 11 02 00            132 	ld	de,#_carinha + 0 + 2
                            133 ; genAssign (pointer)
   000F 3E 66               134 	ld	a,#0x66
   0011 12                  135 	ld	(de),a
                            136 ; genPlus
                            137 ; genPlusIncr
   0012 11 03 00            138 	ld	de,#_carinha + 0 + 3
                            139 ; genAssign (pointer)
   0015 3E 66               140 	ld	a,#0x66
   0017 12                  141 	ld	(de),a
                            142 ; genPlus
                            143 ; genPlusIncr
   0018 11 04 00            144 	ld	de,#_carinha + 0 + 4
                            145 ; genAssign (pointer)
   001B 3E 00               146 	ld	a,#0x00
   001D 12                  147 	ld	(de),a
                            148 ; genPlus
                            149 ; genPlusIncr
   001E 11 05 00            150 	ld	de,#_carinha + 0 + 5
                            151 ; genAssign (pointer)
   0021 3E 00               152 	ld	a,#0x00
   0023 12                  153 	ld	(de),a
                            154 ; genPlus
                            155 ; genPlusIncr
   0024 11 06 00            156 	ld	de,#_carinha + 0 + 6
                            157 ; genAssign (pointer)
   0027 3E 18               158 	ld	a,#0x18
   0029 12                  159 	ld	(de),a
                            160 ; genPlus
                            161 ; genPlusIncr
   002A 11 07 00            162 	ld	de,#_carinha + 0 + 7
                            163 ; genAssign (pointer)
   002D 3E 18               164 	ld	a,#0x18
   002F 12                  165 	ld	(de),a
                            166 ; genPlus
                            167 ; genPlusIncr
   0030 11 08 00            168 	ld	de,#_carinha + 0 + 8
                            169 ; genAssign (pointer)
   0033 3E 42               170 	ld	a,#0x42
   0035 12                  171 	ld	(de),a
                            172 ; genPlus
                            173 ; genPlusIncr
   0036 11 09 00            174 	ld	de,#_carinha + 0 + 9
                            175 ; genAssign (pointer)
   0039 3E 42               176 	ld	a,#0x42
   003B 12                  177 	ld	(de),a
                            178 ; genPlus
                            179 ; genPlusIncr
   003C 11 0A 00            180 	ld	de,#_carinha + 0 + 10
                            181 ; genAssign (pointer)
   003F 3E 42               182 	ld	a,#0x42
   0041 12                  183 	ld	(de),a
                            184 ; genPlus
                            185 ; genPlusIncr
   0042 11 0B 00            186 	ld	de,#_carinha + 0 + 11
                            187 ; genAssign (pointer)
   0045 3E 42               188 	ld	a,#0x42
   0047 12                  189 	ld	(de),a
                            190 ; genPlus
                            191 ; genPlusIncr
   0048 11 0C 00            192 	ld	de,#_carinha + 0 + 12
                            193 ; genAssign (pointer)
   004B 3E 24               194 	ld	a,#0x24
   004D 12                  195 	ld	(de),a
                            196 ; genPlus
                            197 ; genPlusIncr
   004E 11 0D 00            198 	ld	de,#_carinha + 0 + 13
                            199 ; genAssign (pointer)
   0051 3E 24               200 	ld	a,#0x24
   0053 12                  201 	ld	(de),a
                            202 ; genPlus
                            203 ; genPlusIncr
   0054 11 0E 00            204 	ld	de,#_carinha + 0 + 14
                            205 ; genAssign (pointer)
   0057 3E 18               206 	ld	a,#0x18
   0059 12                  207 	ld	(de),a
                            208 ; genPlus
                            209 ; genPlusIncr
   005A 11 0F 00            210 	ld	de,#_carinha + 0 + 15
                            211 ; genAssign (pointer)
   005D 3E 18               212 	ld	a,#0x18
   005F 12                  213 	ld	(de),a
                            214 ; genPlus
                            215 ; genPlusIncr
   0060 11 10 00            216 	ld	de,#_carinha + 0 + 16
                            217 ; genAssign (pointer)
   0063 3E 00               218 	ld	a,#0x00
   0065 12                  219 	ld	(de),a
                            220 ; genPlus
                            221 ; genPlusIncr
   0066 11 11 00            222 	ld	de,#_carinha + 0 + 17
                            223 ; genAssign (pointer)
   0069 3E 00               224 	ld	a,#0x00
   006B 12                  225 	ld	(de),a
                            226 ; genPlus
                            227 ; genPlusIncr
   006C 11 12 00            228 	ld	de,#_carinha + 0 + 18
                            229 ; genAssign (pointer)
   006F 3E 66               230 	ld	a,#0x66
   0071 12                  231 	ld	(de),a
                            232 ; genPlus
                            233 ; genPlusIncr
   0072 11 13 00            234 	ld	de,#_carinha + 0 + 19
                            235 ; genAssign (pointer)
   0075 3E 66               236 	ld	a,#0x66
   0077 12                  237 	ld	(de),a
                            238 ; genPlus
                            239 ; genPlusIncr
   0078 11 14 00            240 	ld	de,#_carinha + 0 + 20
                            241 ; genAssign (pointer)
   007B 3E 00               242 	ld	a,#0x00
   007D 12                  243 	ld	(de),a
                            244 ; genPlus
                            245 ; genPlusIncr
   007E 11 15 00            246 	ld	de,#_carinha + 0 + 21
                            247 ; genAssign (pointer)
   0081 3E 00               248 	ld	a,#0x00
   0083 12                  249 	ld	(de),a
                            250 ; genPlus
                            251 ; genPlusIncr
   0084 11 16 00            252 	ld	de,#_carinha + 0 + 22
                            253 ; genAssign (pointer)
   0087 3E 18               254 	ld	a,#0x18
   0089 12                  255 	ld	(de),a
                            256 ; genPlus
                            257 ; genPlusIncr
   008A 11 17 00            258 	ld	de,#_carinha + 0 + 23
                            259 ; genAssign (pointer)
   008D 3E 18               260 	ld	a,#0x18
   008F 12                  261 	ld	(de),a
                            262 ; genPlus
                            263 ; genPlusIncr
   0090 11 18 00            264 	ld	de,#_carinha + 0 + 24
                            265 ; genAssign (pointer)
   0093 3E 00               266 	ld	a,#0x00
   0095 12                  267 	ld	(de),a
                            268 ; genPlus
                            269 ; genPlusIncr
   0096 11 19 00            270 	ld	de,#_carinha + 0 + 25
                            271 ; genAssign (pointer)
   0099 3E 00               272 	ld	a,#0x00
   009B 12                  273 	ld	(de),a
                            274 ; genPlus
                            275 ; genPlusIncr
   009C 11 1A 00            276 	ld	de,#_carinha + 0 + 26
                            277 ; genAssign (pointer)
   009F 3E 42               278 	ld	a,#0x42
   00A1 12                  279 	ld	(de),a
                            280 ; genPlus
                            281 ; genPlusIncr
   00A2 11 1B 00            282 	ld	de,#_carinha + 0 + 27
                            283 ; genAssign (pointer)
   00A5 3E 42               284 	ld	a,#0x42
   00A7 12                  285 	ld	(de),a
                            286 ; genPlus
                            287 ; genPlusIncr
   00A8 11 1C 00            288 	ld	de,#_carinha + 0 + 28
                            289 ; genAssign (pointer)
   00AB 3E 3C               290 	ld	a,#0x3C
   00AD 12                  291 	ld	(de),a
                            292 ; genPlus
                            293 ; genPlusIncr
   00AE 11 1D 00            294 	ld	de,#_carinha + 0 + 29
                            295 ; genAssign (pointer)
   00B1 3E 3C               296 	ld	a,#0x3C
   00B3 12                  297 	ld	(de),a
                            298 ; genPlus
                            299 ; genPlusIncr
   00B4 11 1E 00            300 	ld	de,#_carinha + 0 + 30
                            301 ; genAssign (pointer)
   00B7 3E 00               302 	ld	a,#0x00
   00B9 12                  303 	ld	(de),a
                            304 ; genPlus
                            305 ; genPlusIncr
   00BA 11 1F 00            306 	ld	de,#_carinha + 0 + 31
                            307 ; genAssign (pointer)
   00BD 3E 00               308 	ld	a,#0x00
   00BF 12                  309 	ld	(de),a
                            310 ;--------------------------------------------------------
                            311 ; Home
                            312 ;--------------------------------------------------------
                            313 	.area _HOME
                            314 	.area _CODE
                            315 ;--------------------------------------------------------
                            316 ; code
                            317 ;--------------------------------------------------------
                            318 	.area _CODE
                            319 ;	main.c 7
                            320 ; genLabel
                            321 ; genFunction
                            322 ;	---------------------------------
                            323 ; Function main
                            324 ; ---------------------------------
   0000                     325 ___main_start:
   0000                     326 _main:
   0000 C5                  327 	push	bc
                            328 	
                            329 ;	main.c 8
                            330 ; genAssign
   0001 0E 00               331 	ld	c,#0x00
                            332 ;	main.c 9
                            333 ; genCall
   0003 CD DB 00            334 	call	_init
                            335 ;	main.c 11
                            336 ; genIpush
   0006 21 00 00            337 	ld	hl,#_carinha + 0
   0009 E5                  338 	push	hl
                            339 ; genIpush
   000A 3E 02               340 	ld	a,#0x02
   000C F5                  341 	push	af
   000D 33                  342 	inc	sp
                            343 ; genIpush
   000E 3E 00               344 	ld	a,#0x00
   0010 F5                  345 	push	af
   0011 33                  346 	inc	sp
                            347 ; genCall
   0012 CD 00 00            348 	call	_set_sprite_data
   0015 E8 04               349 	lda	sp,4(sp)
                            350 ;	main.c 12
                            351 ; genIpush
   0017 3E 00               352 	ld	a,#0x00
   0019 F5                  353 	push	af
   001A 33                  354 	inc	sp
                            355 ; genIpush
   001B 3E 00               356 	ld	a,#0x00
   001D F5                  357 	push	af
   001E 33                  358 	inc	sp
                            359 ; genCall
   001F CD 00 00            360 	call	_set_sprite_tile
   0022 E8 02               361 	lda	sp,2(sp)
                            362 ;	main.c 13
                            363 ; genIpush
   0024 3E 4E               364 	ld	a,#0x4E
   0026 F5                  365 	push	af
   0027 33                  366 	inc	sp
                            367 ; genIpush
   0028 3E 58               368 	ld	a,#0x58
   002A F5                  369 	push	af
   002B 33                  370 	inc	sp
                            371 ; genIpush
   002C 3E 00               372 	ld	a,#0x00
   002E F5                  373 	push	af
   002F 33                  374 	inc	sp
                            375 ; genCall
   0030 CD 00 00            376 	call	_move_sprite
   0033 E8 03               377 	lda	sp,3(sp)
                            378 ;	main.c 14
                            379 ; genOr
                            380 ; AOP_SFR for _LCDC_REG
                            381 ; Type res[4] = l[4]&r[1]
                            382 ; Size res[1] = l[1]&r[1]
   0035 F0 00               383 	ldh	a,(_LCDC_REG+0) ; x
   0037 F6 02               384 	or	a,#0x02
   0039 E0 00               385 	ldh	(_LCDC_REG+0),a
                            386 ;	main.c 16
                            387 ; genLabel
   003B                     388 00111$:
                            389 ;	main.c 17
                            390 ; genCall
   003B CD 00 00            391 	call	_joypad
   003E 43                  392 	ld	b,e
                            393 ; genCmpEq
   003F 78                  394 	ld	a,b ; 2
   0040 FE 01               395 	cp	a,#0x01
                            396 ; Rule 5
   0042 CA 74 00            397 	jp	z,00102$
   0045                     398 00122$:
                            399 ; genCmpEq
   0045 78                  400 	ld	a,b ; 2
   0046 FE 02               401 	cp	a,#0x02
                            402 ; Rule 5
   0048 CA 60 00            403 	jp	z,00101$
   004B                     404 00123$:
                            405 ; genCmpEq
   004B 78                  406 	ld	a,b ; 2
   004C FE 04               407 	cp	a,#0x04
                            408 ; Rule 5
   004E CA 88 00            409 	jp	z,00103$
   0051                     410 00124$:
                            411 ; genCmpEq
   0051 78                  412 	ld	a,b ; 2
   0052 FE 08               413 	cp	a,#0x08
                            414 ; Rule 5
   0054 CA 9C 00            415 	jp	z,00104$
   0057                     416 00125$:
                            417 ; genCmpEq
   0057 78                  418 	ld	a,b ; 2
   0058 FE 10               419 	cp	a,#0x10
                            420 ; Rule 5
   005A CA B0 00            421 	jp	z,00108$
   005D                     422 00126$:
                            423 ; genGoto
   005D C3 CD 00            424 	jp	00109$
                            425 ;	main.c 19
                            426 ; genLabel
   0060                     427 00101$:
                            428 ; genIpush
   0060 3E 00               429 	ld	a,#0x00
   0062 F5                  430 	push	af
   0063 33                  431 	inc	sp
                            432 ; genIpush
   0064 3E F6               433 	ld	a,#0xF6
   0066 F5                  434 	push	af
   0067 33                  435 	inc	sp
                            436 ; genIpush
   0068 3E 00               437 	ld	a,#0x00
   006A F5                  438 	push	af
   006B 33                  439 	inc	sp
                            440 ; genCall
   006C CD 00 00            441 	call	_scroll_sprite
   006F E8 03               442 	lda	sp,3(sp)
                            443 ;	main.c 20
                            444 ; genGoto
   0071 C3 CD 00            445 	jp	00109$
                            446 ;	main.c 22
                            447 ; genLabel
   0074                     448 00102$:
                            449 ; genIpush
   0074 3E 00               450 	ld	a,#0x00
   0076 F5                  451 	push	af
   0077 33                  452 	inc	sp
                            453 ; genIpush
   0078 3E 0A               454 	ld	a,#0x0A
   007A F5                  455 	push	af
   007B 33                  456 	inc	sp
                            457 ; genIpush
   007C 3E 00               458 	ld	a,#0x00
   007E F5                  459 	push	af
   007F 33                  460 	inc	sp
                            461 ; genCall
   0080 CD 00 00            462 	call	_scroll_sprite
   0083 E8 03               463 	lda	sp,3(sp)
                            464 ;	main.c 23
                            465 ; genGoto
   0085 C3 CD 00            466 	jp	00109$
                            467 ;	main.c 25
                            468 ; genLabel
   0088                     469 00103$:
                            470 ; genIpush
   0088 3E F6               471 	ld	a,#0xF6
   008A F5                  472 	push	af
   008B 33                  473 	inc	sp
                            474 ; genIpush
   008C 3E 00               475 	ld	a,#0x00
   008E F5                  476 	push	af
   008F 33                  477 	inc	sp
                            478 ; genIpush
   0090 3E 00               479 	ld	a,#0x00
   0092 F5                  480 	push	af
   0093 33                  481 	inc	sp
                            482 ; genCall
   0094 CD 00 00            483 	call	_scroll_sprite
   0097 E8 03               484 	lda	sp,3(sp)
                            485 ;	main.c 26
                            486 ; genGoto
   0099 C3 CD 00            487 	jp	00109$
                            488 ;	main.c 28
                            489 ; genLabel
   009C                     490 00104$:
                            491 ; genIpush
   009C 3E 0A               492 	ld	a,#0x0A
   009E F5                  493 	push	af
   009F 33                  494 	inc	sp
                            495 ; genIpush
   00A0 3E 00               496 	ld	a,#0x00
   00A2 F5                  497 	push	af
   00A3 33                  498 	inc	sp
                            499 ; genIpush
   00A4 3E 00               500 	ld	a,#0x00
   00A6 F5                  501 	push	af
   00A7 33                  502 	inc	sp
                            503 ; genCall
   00A8 CD 00 00            504 	call	_scroll_sprite
   00AB E8 03               505 	lda	sp,3(sp)
                            506 ;	main.c 29
                            507 ; genGoto
   00AD C3 CD 00            508 	jp	00109$
                            509 ;	main.c 35
                            510 ; genLabel
   00B0                     511 00108$:
                            512 ;	main.c 31
                            513 ; genCmpEq
   00B0 79                  514 	ld	a,c
   00B1 B7                  515 	or	a,a
   00B2 C2 B7 00            516 	jp	nz,00127$
   00B5 18 03               517 	jr	00128$
   00B7                     518 00127$:
   00B7 C3 BF 00            519 	jp	00106$
   00BA                     520 00128$:
                            521 ;	main.c 32
                            522 ; genAssign
   00BA 0E 01               523 	ld	c,#0x01
                            524 ; genGoto
   00BC C3 C1 00            525 	jp	00107$
                            526 ; genLabel
   00BF                     527 00106$:
                            528 ;	main.c 34
                            529 ; genAssign
   00BF 0E 00               530 	ld	c,#0x00
                            531 ; genLabel
   00C1                     532 00107$:
                            533 ;	main.c 37
                            534 ; genIpush
   00C1 79                  535 	ld	a,c
   00C2 F5                  536 	push	af
   00C3 33                  537 	inc	sp
                            538 ; genIpush
   00C4 3E 00               539 	ld	a,#0x00
   00C6 F5                  540 	push	af
   00C7 33                  541 	inc	sp
                            542 ; genCall
   00C8 CD 00 00            543 	call	_set_sprite_tile
   00CB E8 02               544 	lda	sp,2(sp)
                            545 ;	main.c 39
                            546 ; genLabel
   00CD                     547 00109$:
                            548 ;	main.c 40
                            549 ; genIpush
   00CD 21 64 00            550 	ld	hl,#0x0064
   00D0 E5                  551 	push	hl
                            552 ; genCall
   00D1 CD 00 00            553 	call	_delay
   00D4 E8 02               554 	lda	sp,2(sp)
                            555 ; genGoto
   00D6 C3 3B 00            556 	jp	00111$
                            557 ; genLabel
   00D9                     558 00113$:
                            559 ; genEndFunction
                            560 	
   00D9 C1                  561 	pop	bc
   00DA C9                  562 	ret
   00DB                     563 ___main_end:
                            564 ;	main.c 44
                            565 ; genLabel
                            566 ; genFunction
                            567 ;	---------------------------------
                            568 ; Function init
                            569 ; ---------------------------------
   00DB                     570 ___init_start:
   00DB                     571 _init:
                            572 	
                            573 ;	main.c 45
                            574 ; genOr
                            575 ; AOP_SFR for _LCDC_REG
                            576 ; Type res[4] = l[4]&r[1]
                            577 ; Size res[1] = l[1]&r[1]
   00DB F0 00               578 	ldh	a,(_LCDC_REG+0) ; x
   00DD F6 80               579 	or	a,#0x80
   00DF E0 00               580 	ldh	(_LCDC_REG+0),a
                            581 ;	main.c 46
                            582 ; genAssign
                            583 ; AOP_SFR for _NR52_REG
   00E1 3E 8F               584 	ld	a,#0x8F
   00E3 E0 00               585 	ldh	(_NR52_REG+0),a
                            586 ;	main.c 47
                            587 ; genAssign
                            588 ; AOP_SFR for _NR51_REG
   00E5 3E 11               589 	ld	a,#0x11
   00E7 E0 00               590 	ldh	(_NR51_REG+0),a
                            591 ;	main.c 48
                            592 ; genAssign
                            593 ; AOP_SFR for _NR50_REG
   00E9 3E 77               594 	ld	a,#0x77
   00EB E0 00               595 	ldh	(_NR50_REG+0),a
                            596 ; genLabel
   00ED                     597 00101$:
                            598 ; genEndFunction
                            599 	
   00ED C9                  600 	ret
   00EE                     601 ___init_end:
                            602 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___init_end                        00EE R
  0 ___init_start                      00DB R
  0 ___main_end                        00DB R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  1 _carinha                           0000 GR
    _delay                             **** GX
  0 _init                              00DB GR
    _joypad                            **** GX
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _scroll_sprite                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
    _sys_time                          **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   EE   flags 0
   1 _DATA                              size   20   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   C0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
